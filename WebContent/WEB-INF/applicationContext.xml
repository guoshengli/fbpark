<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">

	<!--Configures Hibernate Config -->
	<!-- <import resource="applicationContext-hibernate.xml" /> -->

	<!-- Scan classpath for annotations (eg: @Service, @Repository etc) /META-INF/database.properties -->
	<context:component-scan base-package="com.fbpark.rest" />
	<context:annotation-config />
	<context:property-placeholder location="/META-INF/database.properties"  ignore-unresolvable="true"/>
	<context:property-placeholder location="/META-INF/redis.properties" />
	<!--Spring 的配置文件中一定要配置这一项 -->
	<task:annotation-driven />
	<!--<bean id="annotationPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <list> <value>/META-INF/database.properties</value> 
		<value>/META-INF/redis.properties</value> </list> </property> </bean> -->

	<!-- <bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="/META-INF/ehcache.xml" />
	</bean>

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache" />
	</bean>

	启用缓存注解开关
	<cache:annotation-driven cache-manager="cacheManager" /> -->

	<!-- Access /META-INF/database.properties file:E:\\workspace\\tella-webservice\\WebContent\\META-INF\\database.properties -->
	<bean id="clientRequestFilter" class="com.fbpark.rest.filter.ClientRequestFilter"
		lazy-init="false">
	</bean>

	<!-- JDBC Data Source -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
	</bean>

	<!-- Hibernate Session Factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="packagesToScan" value="com.fbpark.rest.model" />
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- <prop key="hibernate.connection.release_mode">${kidapt.hibernate.release.mode}</prop> -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop> 
				<prop key="hibernate.cache.use_query_cache">true</prop> 
				<prop key="hibernate.cache.region.factory_class"> 
					org.hibernate.cache.ehcache.EhCacheRegionFactory </prop> 
					<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>

				 <prop key="hibernate.net.sf.ehcache.configurationResourceName">/META-INF/ehcache.xml</prop> 
				<!--	<prop key="hibernate.current_session_context_class">thread</prop> C3P0 <prop 
					key="hibernate.connection.provider_class">${hibernate.connection.provider_class}</prop> -->
				<prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop>
				<prop key="hibernate.c3p0.min_size">${hibernate.c3p0.min_size}</prop>
				<prop key="hibernate.c3p0.timeout">${hibernate.c3p0.timeout}</prop>
				<prop key="hibernate.c3p0.max_statements">${hibernate.c3p0.max_statements}</prop>
				<prop key="hibernate.c3p0.idle_test_period">${hibernate.c3p0.idle_test_period}</prop>
				<prop key="hibernate.c3p0.acquire_increment">${hibernate.c3p0.acquire_increment}</prop>
				<!-- <prop key='hibernate.cache.provider_class'>org.hibernate.cache.EHCacheProvider</prop> 
					<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop> -->
			</props>
		</property>
	</bean>

	<bean id="transactionManagerHibernate"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerHibernate" />

	<!-- 配置 redis 连接池 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}">
		</property>
		<property name="maxWaitMillis" value="${redis.maxWait}">
		</property>
		<!-- 若需要配置其他配置信息 , 可在redis.properties添加 -->
	</bean>

	<!-- 配置连接工厂 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="password" value="${redis.pwd}"></property>
	</bean>

	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
	</bean>
</beans>